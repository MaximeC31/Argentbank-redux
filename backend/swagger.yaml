swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  /account:
    post:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: User Accounts
      description: API to fetch all bank accounts for the currently logged-in user.
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User accounts retrieved successfully.
          schema:
            $ref: "#/definitions/ApiResponseAccountList"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /transaction/{accountId}:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Account Transactions
      description: API to fetch transactions for a specific account belonging to the logged-in user. Can optionally group results by month.
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: accountId
          in: path
          description: The ID of the account to fetch transactions for.
          required: true
          type: string
        - name: filterPerMonth
          in: query
          description: Set to true to group transactions by month.
          required: false
          type: boolean
          default: false
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully.
          schema:
            $ref: "#/definitions/ApiResponseTransactionList"
        "400":
          description: Bad Request (e.g., invalid accountId)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden (User does not own this account)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Account not found or no transactions found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /transaction/{accountId}/{transactionId}:
    post:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Transaction Details
      description: API to fetch details for a specific transaction belonging to the logged-in user. Can optionally filter by type.
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: The ID of the transaction to fetch.
          required: true
          type: string
        - name: accountId
          in: path
          description: The ID of the account to fetch transactions for.
          required: true
          type: string
        - name: type
          in: query
          description: Optional transaction type filter.
          required: false
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transaction details retrieved successfully.
          schema:
            $ref: "#/definitions/ApiResponseTransactionDetail"
        "400":
          description: Bad Request (e.g., invalid type filter)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden (User cannot view this transaction)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Transaction not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

    patch:
      security:
        - Bearer: []
      tags:
        - Transaction Module
      summary: Patch Transaction Details
      description: API to partially update user-editable transaction details (category, notes).
      parameters:
        - name: Authorization
          in: header
          description: Attach Bearer JWT token
          required: true
          type: string
        - name: transactionId
          in: path
          description: The ID of the transaction to update.
          required: true
          type: string
        - name: accountId
          in: path
          description: The ID of the account to fetch transactions for.
          required: true
          type: string
        - in: body
          name: body
          description: Fields to update (only provided fields are modified).
          required: true
          schema:
            $ref: "#/definitions/TransactionUpdatePayload"
      produces:
        - application/json
      responses:
        "200":
          description: Transaction updated successfully.
          schema:
            $ref: "#/definitions/ApiResponseTransactionDetail"
        "400":
          description: Bad Request (e.g., invalid payload fields)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        "403":
          description: Forbidden (User cannot modify this transaction)
          schema:
            $ref: "#/definitions/ErrorResponse"
        "404":
          description: Transaction not found
          schema:
            $ref: "#/definitions/ErrorResponse"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /transaction/types:
    get:
      tags:
        - Transaction Module
      summary: Transaction Types
      description: API to retrieve the list of all possible transaction types.
      produces:
        - application/json
      responses:
        "200":
          description: Transaction types retrieved successfully.
          schema:
            $ref: "#/definitions/ApiResponseTransactionTypes"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorResponse"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string

  Account:
    type: object
    properties:
      accountId:
        type: string
        description: Unique account identifier
        example: acc_checking_8349
      title:
        type: string
        description: Account name/type
        example: Argent Bank Checking (x8349)
      balance:
        type: number
        format: double
        description: Current account balance
        example: 2082.79
      description:
        type: string
        description: Balance description (e.g., Available Balance)
        example: Available Balance

  Transaction:
    type: object
    properties:
      transactionId:
        type: string
        description: Unique transaction identifier
        example: tx_12345abc
      accountId:
        type: string
        description: Associated account ID
        example: acc_checking_8349
      date:
        type: string
        format: date
        description: Transaction date (YYYY-MM-DD)
        example: "2023-10-26"
      description:
        type: string
        description: Transaction description
        example: "Coffee Shop Purchase"
      amount:
        type: number
        format: double
        description: Transaction amount (+ credit, - debit)
        example: -5.75
      balance:
        type: number
        format: double
        description: Balance after transaction
        example: 2077.04
      type:
        type: string
        description: Transaction type
        example: "Electronic Payment"
      category:
        type: string
        description: User-assigned category
        example: "Food & Dining"
      notes:
        type: string
        description: User-added notes
        example: "Morning coffee"

  TransactionUpdatePayload:
    type: object
    description: Fields that can be updated for a transaction via PATCH.
    properties:
      category:
        type: string
        description: New category.
      notes:
        type: string
        description: New notes.

  ApiResponseAccountList:
    allOf:
      - $ref: "#/definitions/ApiResponse"
      - type: object
        properties:
          body:
            type: array
            description: List of user accounts.
            items:
              $ref: "#/definitions/Account"

  ApiResponseTransactionList:
    allOf:
      - $ref: "#/definitions/ApiResponse"
      - type: object
        properties:
          body:
            type: array
            description: List of transactions.
            items:
              $ref: "#/definitions/Transaction"

  ApiResponseTransactionDetail:
    allOf:
      - $ref: "#/definitions/ApiResponse"
      - type: object
        properties:
          body:
            $ref: "#/definitions/Transaction"

  ApiResponseTransactionTypes:
    allOf:
      - $ref: "#/definitions/ApiResponse"
      - type: object
        properties:
          body:
            type: array
            description: List of available transaction types.
            items:
              type: string
            example: ["Electronic Payment", "Deposit", "Withdrawal"]

  ErrorResponse:
    type: object
    required:
      - status
      - message
    properties:
      status:
        type: integer
        description: HTTP Error Status Code (e.g., 400, 401, 403, 404, 500)
        example: 400
      message:
        type: string
        description: Description of the error
        example: "Invalid Fields"
